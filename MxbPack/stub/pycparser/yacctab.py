
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unitleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMODAUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INT LONG REGISTER RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE STDCALL CDECL ASM QUOTE DECLSPEC ATTRIBUTE ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASHabstract_declarator_opt : empty\n| abstract_declaratorconstant_expression_opt : empty\n| constant_expressiondeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_opt : empty\n| declaration_specifiersexpression_opt : empty\n| expressionidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listparameter_type_list_opt : empty\n| parameter_type_listspecifier_qualifier_list_opt : empty\n| specifier_qualifier_liststatement_list_opt : empty\n| statement_listtype_qualifier_list_opt : empty\n| type_qualifier_list translation_unit    : external_declaration \n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n         external_declaration    : QUOTE compound_string  pp_directive  : PPHASH \n         function_definition : declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement    \n                        | jump_statement        \n                        | asm_statement\n                        | quote_statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n         declaration_a : decl_body SEMI \n         declaration_b : declspec decl_body SEMI \n         declaration_c : STDCALL decl_body SEMI\n         declaration : declaration_a \n                        | declaration_b\n                        | declaration_c  declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers  : type_qualifier declaration_specifiers_opt \n         declaration_specifiers  : type_specifier declaration_specifiers_opt\n         declaration_specifiers  : storage_class_specifier declaration_specifiers_opt\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         type_specifier  : VOID\n                            | CHAR\n                            | SHORT\n                            | INT\n                            | LONG\n                            | FLOAT\n                            | DOUBLE\n                            | SIGNED\n                            | UNSIGNED\n                            | typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n         type_qualifier  : CONST\n                            | VOLATILE\n        init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         specifier_qualifier_list    : type_qualifier specifier_qualifier_list_opt\n         specifier_qualifier_list    : type_specifier specifier_qualifier_list_opt\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union LBRACE struct_declaration_list RBRACE\n         struct_or_union_specifier   : struct_or_union ID LBRACE struct_declaration_list RBRACE\n                                        | struct_or_union TYPEID LBRACE struct_declaration_list RBRACE\n         struct_or_union : STRUCT \n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration  : specifier_qualifier_list struct_declarator_list SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         struct_declarator : empty\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM LBRACE enumerator_list RBRACE\n         enum_specifier  : ENUM ID LBRACE enumerator_list RBRACE\n                            | ENUM TYPEID LBRACE enumerator_list RBRACE\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : direct_declarator \n         declarator  : pointer direct_declarator \n         attribute_expr : ID LPAREN expression RPAREN\n                           | ID\n         attribute : ATTRIBUTE LPAREN LPAREN attribute_expr RPAREN RPAREN  declspec : DECLSPEC LPAREN ID RPAREN  direct_declarator   : STDCALL direct_declarator\n         direct_declarator   : ID\n         direct_declarator   : LPAREN declarator RPAREN \n         direct_declarator   : direct_declarator LBRACKET constant_expression_opt RBRACKET\n         direct_declarator   : direct_declarator LPAREN parameter_type_list RPAREN \n                                | direct_declarator LPAREN identifier_list_opt RPAREN\n         direct_declarator   : direct_declarator attribute \n            times   : TIMES\n                    | CDECL TIMES\n                    | STDCALL TIMES\n         pointer : times type_qualifier_list_opt\n                    | times type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : LBRACE initializer_list RBRACE\n                        | LBRACE initializer_list COMMA RBRACE\n         initializer_list    : initializer\n                                | initializer_list COMMA initializer\n         type_name   : specifier_qualifier_list abstract_declarator_opt \n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET \n         direct_abstract_declarator  : LBRACKET constant_expression_opt RBRACKET \n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN \n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN \n         compound_statement : LBRACE statement_list_opt RBRACE  compound_statement : LBRACE declaration_list RBRACE  compound_statement : LBRACE declaration_list statement_list RBRACE  statement_list  : statement \n                            | statement_list statement\n         labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI  \n                            | RETURN SEMI \n         compound_string : compound_string STRING_LITERAL\n                            | STRING_LITERAL\n         asm_argument : compound_string LPAREN expression RPAREN  asm_arguments_list : asm_argument COMMA asm_arguments_list \n                               | asm_argument\n         asm_param_list : COLON asm_arguments_list asm_param_list\n                           | COLON asm_param_list\n                           | empty\n         asm_qualifier : ASM VOLATILE\n                          | ASM\n         asm_expression : LPAREN asm_expression RPAREN\n                           | LPAREN compound_string asm_param_list RPAREN\n         asm_statement : asm_qualifier asm_expression SEMI  quote_statement : QUOTE compound_string SEMI  expression_statement : expression_opt SEMI  expression  : assignment_expression \n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL   \n                                | TIMESEQUAL  \n                                | DIVEQUAL    \n                                | MODEQUAL    \n                                | PLUSEQUAL   \n                                | MINUSEQUAL  \n                                | LSHIFTEQUAL \n                                | RSHIFTEQUAL \n                                | ANDEQUAL    \n                                | OREQUAL     \n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression \n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression \n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD identifier\n                                | postfix_expression ARROW identifier\n         postfix_expression  : postfix_expression PLUSPLUS \n                                | postfix_expression MINUSMINUS\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : STRING_LITERAL \n                                | WSTRING_LITERAL\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : LPAREN compound_statement RPAREN  argument_expression_list    : assignment_expression \n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n         constant    : FLOAT_CONST  constant    : CHAR_CONST\n                        | WCHAR_CONST\n        empty : '
    
_lr_action_items = {'VOID':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[7,7,-52,-59,-69,-57,-65,-54,-55,-27,-23,7,-53,7,-61,-66,-68,7,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,7,-64,-67,-70,7,7,-78,7,-77,-104,-28,-165,-24,-115,7,-94,-93,7,-41,-47,7,7,-109,-111,7,7,7,-84,7,7,-164,-42,7,7,-30,-48,-43,7,-85,-79,7,-108,7,-112,-114,-113,7,7,-95,-31,7,-81,-86,-80,7,7,-97,-96,-145,-146,-147,-107,]),'DECLSPEC':([0,12,14,24,27,29,30,31,33,35,38,40,49,60,64,65,68,69,79,81,88,90,92,95,104,106,158,159,160,161,214,215,216,237,246,340,344,382,399,],[15,-27,-23,15,-103,-44,-45,-46,-26,-110,-25,-29,15,-104,-28,-165,-24,-115,15,-41,-47,15,-109,-111,-164,-42,15,-30,-48,-43,-112,-114,-113,-31,15,-145,-146,-147,-107,]),'LBRACKET':([1,2,3,4,7,9,10,11,16,18,20,21,23,25,26,27,34,35,37,39,41,42,44,45,46,47,48,51,52,53,56,57,59,60,63,69,73,75,82,83,84,85,86,92,93,95,98,100,109,110,111,112,113,116,121,123,127,128,132,133,137,142,155,157,164,165,166,167,168,179,183,192,214,215,216,219,221,224,229,265,268,273,275,276,279,293,294,298,299,320,332,335,364,365,371,372,373,397,398,399,],[-254,-52,-59,-69,-57,-65,-54,-55,-254,-53,-61,-66,-68,-56,-181,70,-116,-110,-62,-58,-60,-63,-254,-64,-254,-67,-70,-51,-7,-8,-117,-78,-77,70,-50,-115,-94,-93,-49,-22,-119,-121,-21,70,-118,-111,-254,-254,-252,-242,-253,-251,-240,181,-250,-231,-247,-241,-249,-248,-239,218,-122,-120,-79,-17,-76,-18,-75,-237,-238,218,-112,-114,-113,218,218,325,-95,-247,-81,-80,-236,-235,-234,-244,-243,218,218,325,-97,-96,-232,-233,-142,-144,-140,-141,-143,-107,]),'WCHAR_CONST':([29,30,31,70,81,88,106,107,114,115,117,118,120,122,124,126,129,136,153,158,160,161,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,267,272,281,282,283,284,285,286,287,288,289,290,291,292,295,296,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,366,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,111,-41,-47,-42,-230,111,-228,-227,111,111,-226,111,111,-225,-229,111,111,-48,-43,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-33,-36,-39,-32,111,111,-34,111,111,-148,-37,111,-35,-38,111,-187,-190,-188,-184,-185,-189,-191,111,-193,-194,-186,-192,111,111,111,-145,-178,111,-146,-163,111,-161,-149,111,111,111,-160,111,111,111,111,111,111,-177,-159,-147,-162,-152,111,-176,-150,111,111,-151,111,111,111,-156,-155,-153,111,-157,111,111,-154,111,-158,]),'FLOAT_CONST':([29,30,31,70,81,88,106,107,114,115,117,118,120,122,124,126,129,136,153,158,160,161,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,267,272,281,282,283,284,285,286,287,288,289,290,291,292,295,296,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,366,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,112,-41,-47,-42,-230,112,-228,-227,112,112,-226,112,112,-225,-229,112,112,-48,-43,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-33,-36,-39,-32,112,112,-34,112,112,-148,-37,112,-35,-38,112,-187,-190,-188,-184,-185,-189,-191,112,-193,-194,-186,-192,112,112,112,-145,-178,112,-146,-163,112,-161,-149,112,112,112,-160,112,112,112,112,112,112,-177,-159,-147,-162,-152,112,-176,-150,112,112,-151,112,112,112,-156,-155,-153,112,-157,112,112,-154,112,-158,]),'MINUS':([29,30,31,70,81,88,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,132,133,136,137,153,158,160,161,169,176,177,179,181,182,183,184,185,186,187,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,265,267,272,275,276,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,363,364,365,366,369,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,115,-41,-47,-42,-230,-217,-252,-242,-253,-251,-240,115,-228,-219,-227,115,115,-250,-226,-231,115,-198,115,-247,-241,-225,198,-249,-248,-229,-239,115,115,-48,-43,115,115,-223,-237,115,115,-238,-222,115,-220,-217,-221,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-33,-36,-39,-32,115,115,-34,115,115,-148,-37,115,-35,-247,-38,115,-236,-235,-234,-187,-190,-188,-184,-185,-189,-191,115,-193,-194,-186,-192,-244,-243,115,115,198,198,198,-203,198,198,198,-202,198,198,-200,-199,198,198,198,198,198,-201,115,-145,-178,115,-146,-163,115,-161,-149,115,115,115,-160,115,115,-224,-232,-233,115,-218,115,115,115,-177,-159,-147,-162,-152,115,-176,-150,115,115,-151,115,115,115,-156,-155,-153,115,-157,115,115,-154,115,-158,]),'RPAREN':([1,2,3,4,7,9,10,11,16,18,20,21,23,25,26,27,34,35,37,39,41,42,44,45,46,47,48,51,52,53,54,56,57,59,60,63,65,69,71,73,75,82,83,84,85,86,92,93,95,98,100,103,104,108,109,110,111,112,113,116,121,123,125,127,128,130,132,133,137,138,139,140,141,142,143,144,145,155,157,164,165,166,167,168,177,179,182,183,184,186,187,188,189,190,191,192,193,194,214,215,216,217,219,220,221,222,223,224,229,252,268,273,274,275,276,278,279,280,293,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,320,321,322,323,324,326,327,328,329,330,331,332,335,340,342,344,363,364,365,367,368,369,371,372,373,375,376,382,386,388,391,392,394,395,396,397,398,399,400,408,409,410,411,413,417,418,419,420,422,424,427,430,431,432,435,],[-254,-52,-59,-69,-57,-65,-54,-55,-254,-53,-61,-66,-68,-56,-181,-103,-116,-110,-62,-58,-60,-63,-254,-64,-254,-67,-70,-51,-7,-8,95,-117,-78,-77,-104,-50,-165,-115,-254,-94,-93,-49,-22,-119,-121,-21,-109,-118,-111,-254,-254,175,-164,-217,-252,-242,-253,-251,-240,-219,-250,-231,-198,-247,-241,-196,-249,-248,-239,215,-11,216,-125,-254,-12,-123,-129,-122,-120,-79,-17,-76,-18,-75,-223,-237,279,-238,-222,-220,-217,293,294,296,-179,-254,-182,-221,-112,-114,-113,-128,-137,-1,-254,-2,-127,-139,-95,-10,-81,-80,363,-236,-235,-245,-234,365,-244,-243,-136,-254,-137,-204,-216,-205,-203,-207,-211,-206,-202,-209,-214,-200,-199,-208,-215,-210,-212,-213,-201,-138,-15,-16,372,373,-254,-130,-124,-126,376,-106,-97,-96,-145,-9,-146,-224,-232,-233,-183,-180,-218,-142,-144,-140,398,399,-147,404,406,408,-254,412,-246,-197,-141,-143,-107,413,-174,-254,422,-171,-105,425,-168,-170,-254,-175,-254,-169,434,-167,435,-166,]),'QUOTE':([0,12,14,24,29,30,31,33,38,40,64,65,68,81,88,104,106,158,159,160,161,237,238,239,241,245,246,248,251,257,259,262,263,267,340,341,343,344,345,348,349,350,355,359,380,381,382,383,385,387,390,393,404,405,406,412,415,416,423,425,429,433,434,436,],[17,-27,-23,17,-44,-45,-46,-26,-25,-29,-28,-165,-24,-41,-47,-164,-42,240,-30,-48,-43,-31,-33,-36,-39,-32,240,-34,240,-148,-37,240,-35,-38,-145,-178,240,-146,-163,-161,-149,240,-160,240,-177,-159,-147,-162,-152,240,-176,-150,240,-151,240,240,-156,-155,-153,-157,240,-154,240,-158,]),'STRUCT':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[36,36,-52,-59,-69,-57,-65,-54,-55,-27,-23,36,-53,36,-61,-66,-68,36,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,36,-64,-67,-70,36,36,-78,36,-77,-104,-28,-165,-24,-115,36,-94,-93,36,-41,-47,36,36,-109,-111,36,36,36,-84,36,36,-164,-42,36,36,-30,-48,-43,36,-85,-79,36,-108,36,-112,-114,-113,36,36,-95,-31,36,-81,-86,-80,36,36,-97,-96,-145,-146,-147,-107,]),'LONG':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[20,20,-52,-59,-69,-57,-65,-54,-55,-27,-23,20,-53,20,-61,-66,-68,20,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,20,-64,-67,-70,20,20,-78,20,-77,-104,-28,-165,-24,-115,20,-94,-93,20,-41,-47,20,20,-109,-111,20,20,20,-84,20,20,-164,-42,20,20,-30,-48,-43,20,-85,-79,20,-108,20,-112,-114,-113,20,20,-95,-31,20,-81,-86,-80,20,20,-97,-96,-145,-146,-147,-107,]),'PLUS':([29,30,31,70,81,88,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,132,133,136,137,153,158,160,161,169,176,177,179,181,182,183,184,185,186,187,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,265,267,272,275,276,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,363,364,365,366,369,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,117,-41,-47,-42,-230,-217,-252,-242,-253,-251,-240,117,-228,-219,-227,117,117,-250,-226,-231,117,-198,117,-247,-241,-225,202,-249,-248,-229,-239,117,117,-48,-43,117,117,-223,-237,117,117,-238,-222,117,-220,-217,-221,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-33,-36,-39,-32,117,117,-34,117,117,-148,-37,117,-35,-247,-38,117,-236,-235,-234,-187,-190,-188,-184,-185,-189,-191,117,-193,-194,-186,-192,-244,-243,117,117,202,202,202,-203,202,202,202,-202,202,202,-200,-199,202,202,202,202,202,-201,117,-145,-178,117,-146,-163,117,-161,-149,117,117,117,-160,117,117,-224,-232,-233,117,-218,117,117,117,-177,-159,-147,-162,-152,117,-176,-150,117,117,-151,117,117,117,-156,-155,-153,117,-157,117,117,-154,117,-158,]),'ELLIPSIS':([226,],[328,]),'GT':([108,109,110,111,112,113,116,121,123,125,127,128,130,132,133,137,177,179,183,184,186,187,194,265,275,276,279,293,294,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,363,364,365,369,],[-217,-252,-242,-253,-251,-240,-219,-250,-231,-198,-247,-241,203,-249,-248,-239,-223,-237,-238,-222,-220,-217,-221,-247,-236,-235,-234,-244,-243,-204,203,-205,-203,-207,203,-206,-202,-209,203,-200,-199,-208,203,203,203,203,-201,-224,-232,-233,-218,]),'RBRACE':([29,30,31,81,88,97,99,106,108,109,110,111,112,113,116,121,123,125,127,128,130,132,133,135,137,148,149,150,158,160,161,162,163,174,177,179,183,184,186,187,193,194,228,230,232,235,238,239,241,243,245,246,248,251,257,259,261,263,267,271,275,276,279,293,294,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,333,334,336,337,340,341,343,344,345,348,349,355,363,364,365,367,369,378,379,380,381,382,383,385,390,393,396,401,402,405,415,416,423,425,433,436,],[-44,-45,-46,-41,-47,164,-84,-42,-217,-252,-242,-253,-251,-240,-219,-250,-231,-198,-247,-241,-196,-249,-248,-195,-239,-98,229,-101,-254,-48,-43,268,-85,273,-223,-237,-238,-222,-220,-217,-182,-221,332,-99,335,-131,-33,-36,-39,340,-32,344,-34,-20,-148,-37,-19,-35,-38,-86,-236,-235,-234,-244,-243,-204,-216,-205,-203,-207,-211,-206,-202,-209,-214,-200,-199,-208,-215,-210,-212,-213,-201,-100,-102,-134,379,-145,-178,382,-146,-163,-161,-149,-160,-224,-232,-233,-183,-218,402,-132,-177,-159,-147,-162,-152,-176,-150,-197,-135,-133,-151,-156,-155,-153,-157,-154,-158,]),'ENUM':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[28,28,-52,-59,-69,-57,-65,-54,-55,-27,-23,28,-53,28,-61,-66,-68,28,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,28,-64,-67,-70,28,28,-78,28,-77,-104,-28,-165,-24,-115,28,-94,-93,28,-41,-47,28,28,-109,-111,28,28,28,-84,28,28,-164,-42,28,28,-30,-48,-43,28,-85,-79,28,-108,28,-112,-114,-113,28,28,-95,-31,28,-81,-86,-80,28,28,-97,-96,-145,-146,-147,-107,]),'PERIOD':([109,110,111,112,113,116,121,123,127,128,132,133,137,179,183,265,275,276,279,293,294,364,365,],[-252,-242,-253,-251,-240,180,-250,-231,-247,-241,-249,-248,-239,-237,-238,-247,-236,-235,-234,-244,-243,-232,-233,]),'GE':([108,109,110,111,112,113,116,121,123,125,127,128,130,132,133,137,177,179,183,184,186,187,194,265,275,276,279,293,294,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,363,364,365,369,],[-217,-252,-242,-253,-251,-240,-219,-250,-231,-198,-247,-241,207,-249,-248,-239,-223,-237,-238,-222,-220,-217,-221,-247,-236,-235,-234,-244,-243,-204,207,-205,-203,-207,207,-206,-202,-209,207,-200,-199,-208,207,207,207,207,-201,-224,-232,-233,-218,]),'INT_CONST_DEC':([29,30,31,70,81,88,106,107,114,115,117,118,120,122,124,126,129,136,153,158,160,161,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,267,272,281,282,283,284,285,286,287,288,289,290,291,292,295,296,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,366,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,133,-41,-47,-42,-230,133,-228,-227,133,133,-226,133,133,-225,-229,133,133,-48,-43,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-33,-36,-39,-32,133,133,-34,133,133,-148,-37,133,-35,-38,133,-187,-190,-188,-184,-185,-189,-191,133,-193,-194,-186,-192,133,133,133,-145,-178,133,-146,-163,133,-161,-149,133,133,133,-160,133,133,133,133,133,133,-177,-159,-147,-162,-152,133,-176,-150,133,133,-151,133,133,133,-156,-155,-153,133,-157,133,133,-154,133,-158,]),'ARROW':([109,110,111,112,113,116,121,123,127,128,132,133,137,179,183,265,275,276,279,293,294,364,365,],[-252,-242,-253,-251,-240,178,-250,-231,-247,-241,-249,-248,-239,-237,-238,-247,-236,-235,-234,-244,-243,-232,-233,]),'DOUBLE':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[42,42,-52,-59,-69,-57,-65,-54,-55,-27,-23,42,-53,42,-61,-66,-68,42,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,42,-64,-67,-70,42,42,-78,42,-77,-104,-28,-165,-24,-115,42,-94,-93,42,-41,-47,42,42,-109,-111,42,42,42,-84,42,42,-164,-42,42,42,-30,-48,-43,42,-85,-79,42,-108,42,-112,-114,-113,42,42,-95,-31,42,-81,-86,-80,42,42,-97,-96,-145,-146,-147,-107,]),'MINUSEQUAL':([108,109,110,111,112,113,116,121,123,127,128,132,133,137,177,179,183,184,186,187,194,265,275,276,279,293,294,363,364,365,369,],[-217,-252,-242,-253,-251,-240,-219,-250,-231,-247,-241,-249,-248,-239,-223,-237,-238,-222,-220,282,-221,-247,-236,-235,-234,-244,-243,-224,-232,-233,-218,]),'INT_CONST_OCT':([29,30,31,70,81,88,106,107,114,115,117,118,120,122,124,126,129,136,153,158,160,161,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,267,272,281,282,283,284,285,286,287,288,289,290,291,292,295,296,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,366,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,132,-41,-47,-42,-230,132,-228,-227,132,132,-226,132,132,-225,-229,132,132,-48,-43,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-33,-36,-39,-32,132,132,-34,132,132,-148,-37,132,-35,-38,132,-187,-190,-188,-184,-185,-189,-191,132,-193,-194,-186,-192,132,132,132,-145,-178,132,-146,-163,132,-161,-149,132,132,132,-160,132,132,132,132,132,132,-177,-159,-147,-162,-152,132,-176,-150,132,132,-151,132,132,132,-156,-155,-153,132,-157,132,132,-154,132,-158,]),'STDCALL':([0,1,2,3,4,5,7,9,10,11,12,13,14,16,18,20,21,23,24,25,26,27,29,30,31,32,33,34,35,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,55,56,57,59,60,61,63,64,65,66,68,69,73,75,79,81,82,83,84,85,86,88,90,92,93,95,98,100,101,104,106,142,152,155,157,158,159,160,161,164,165,166,167,168,192,214,215,216,219,221,229,237,246,268,270,273,298,332,335,340,344,382,399,],[50,-254,-52,-59,-69,55,-57,-65,-54,-55,-27,61,-23,-254,-53,-61,-66,-68,50,-56,-181,-103,-44,-45,-46,55,-26,-116,-110,-62,-25,-58,-29,-60,-63,-254,-64,-254,-67,-70,91,61,-51,-7,-8,61,-117,-78,-77,-104,61,-50,-28,-165,55,-24,-115,-94,-93,91,-41,-49,-22,156,-121,-21,-47,91,-109,-118,-111,-254,-254,55,-164,-42,55,55,-122,-120,91,-30,-48,-43,-79,-17,-76,-18,-75,156,-112,-114,-113,61,55,-95,-31,91,-81,55,-80,156,-97,-96,-145,-146,-147,-107,]),'TIMESEQUAL':([108,109,110,111,112,113,116,121,123,127,128,132,133,137,177,179,183,184,186,187,194,265,275,276,279,293,294,363,364,365,369,],[-217,-252,-242,-253,-251,-240,-219,-250,-231,-247,-241,-249,-248,-239,-223,-237,-238,-222,-220,291,-221,-247,-236,-235,-234,-244,-243,-224,-232,-233,-218,]),'OR':([108,109,110,111,112,113,116,121,123,125,127,128,130,132,133,137,177,179,183,184,186,187,194,265,275,276,279,293,294,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,363,364,365,369,],[-217,-252,-242,-253,-251,-240,-219,-250,-231,-198,-247,-241,212,-249,-248,-239,-223,-237,-238,-222,-220,-217,-221,-247,-236,-235,-234,-244,-243,-204,212,-205,-203,-207,-211,-206,-202,-209,-214,-200,-199,-208,212,-210,-212,-213,-201,-224,-232,-233,-218,]),'SHORT':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[3,3,-52,-59,-69,-57,-65,-54,-55,-27,-23,3,-53,3,-61,-66,-68,3,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,3,-64,-67,-70,3,3,-78,3,-77,-104,-28,-165,-24,-115,3,-94,-93,3,-41,-47,3,3,-109,-111,3,3,3,-84,3,3,-164,-42,3,3,-30,-48,-43,3,-85,-79,3,-108,3,-112,-114,-113,3,3,-95,-31,3,-81,-86,-80,3,3,-97,-96,-145,-146,-147,-107,]),'RETURN':([29,30,31,81,88,106,158,160,161,238,239,241,245,246,248,251,257,259,262,263,267,340,341,343,344,345,348,349,350,355,359,380,381,382,383,385,387,390,393,404,405,406,412,415,416,423,425,429,433,434,436,],[-44,-45,-46,-41,-47,-42,247,-48,-43,-33,-36,-39,-32,247,-34,247,-148,-37,247,-35,-38,-145,-178,247,-146,-163,-161,-149,247,-160,247,-177,-159,-147,-162,-152,247,-176,-150,247,-151,247,247,-156,-155,-153,-157,247,-154,247,-158,]),'RSHIFTEQUAL':([108,109,110,111,112,113,116,121,123,127,128,132,133,137,177,179,183,184,186,187,194,265,275,276,279,293,294,363,364,365,369,],[-217,-252,-242,-253,-251,-240,-219,-250,-231,-247,-241,-249,-248,-239,-223,-237,-238,-222,-220,292,-221,-247,-236,-235,-234,-244,-243,-224,-232,-233,-218,]),'STATIC':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,104,106,158,159,160,161,164,175,214,215,216,221,226,229,237,246,268,273,298,326,332,335,340,344,382,399,],[10,10,-52,-59,-69,-57,-65,-54,-55,-27,-23,10,-53,10,-61,-66,-68,10,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,10,-64,-67,-70,10,10,-78,-77,-104,-28,-165,-24,-115,10,-94,-93,10,-41,-47,10,10,-109,-111,-164,-42,10,-30,-48,-43,-79,-108,-112,-114,-113,10,10,-95,-31,10,-81,-80,10,10,-97,-96,-145,-146,-147,-107,]),'SIZEOF':([29,30,31,70,81,88,106,107,114,115,117,118,120,122,124,126,129,136,153,158,160,161,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,238,239,241,245,246,247,248,251,255,257,259,262,263,267,272,281,282,283,284,285,286,287,288,289,290,291,292,295,296,325,340,341,343,344,345,347,348,349,350,351,353,355,359,360,366,370,377,378,380,381,382,383,385,387,390,393,403,404,405,406,407,412,415,416,423,424,425,428,429,433,434,436,],[-44,-45,-46,114,-41,-47,-42,-230,114,-228,-227,114,114,-226,114,114,-225,-229,114,114,-48,-43,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-33,-36,-39,-32,114,114,-34,114,114,-148,-37,114,-35,-38,114,-187,-190,-188,-184,-185,-189,-191,114,-193,-194,-186,-192,114,114,114,-145,-178,114,-146,-163,114,-161,-149,114,114,114,-160,114,114,114,114,114,114,-177,-159,-147,-162,-152,114,-176,-150,114,114,-151,114,114,114,-156,-155,-153,114,-157,114,114,-154,114,-158,]),'UNSIGNED':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[9,9,-52,-59,-69,-57,-65,-54,-55,-27,-23,9,-53,9,-61,-66,-68,9,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,9,-64,-67,-70,9,9,-78,9,-77,-104,-28,-165,-24,-115,9,-94,-93,9,-41,-47,9,9,-109,-111,9,9,9,-84,9,9,-164,-42,9,9,-30,-48,-43,9,-85,-79,9,-108,9,-112,-114,-113,9,9,-95,-31,9,-81,-86,-80,9,9,-97,-96,-145,-146,-147,-107,]),'UNION':([0,1,2,3,4,7,9,10,11,12,14,16,18,19,20,21,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,44,45,47,48,49,50,57,58,59,60,64,65,68,69,71,73,75,79,81,88,90,91,92,95,96,97,98,99,100,102,104,106,124,158,159,160,161,162,163,164,174,175,176,214,215,216,221,226,229,237,246,268,271,273,298,326,332,335,340,344,382,399,],[22,22,-52,-59,-69,-57,-65,-54,-55,-27,-23,22,-53,22,-61,-66,-68,22,-56,-181,-103,-44,-45,-46,-26,-110,-62,-25,-58,-29,-60,-63,22,-64,-67,-70,22,22,-78,22,-77,-104,-28,-165,-24,-115,22,-94,-93,22,-41,-47,22,22,-109,-111,22,22,22,-84,22,22,-164,-42,22,22,-30,-48,-43,22,-85,-79,22,-108,22,-112,-114,-113,22,22,-95,-31,22,-81,-86,-80,22,22,-97,-96,-145,-146,-147,-107,]),'COLON':([3,4,7,9,20,21,23,26,27,35,37,39,41,42,45,47,48,57,59,60,65,69,73,75,92,95,98,100,101,104,108,109,110,111,112,113,116,121,123,125,127,128,130,132,133,135,137,164,165,166,167,168,173,177,179,183,184,186,187,191,193,194,214,215,216,229,253,265,268,270,273,275,276,279,293,294,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,332,335,352,363,364,365,367,368,369,392,396,399,409,418,420,431,435,],[-59,-69,-57,-65,-61,-66,-68,-181,-103,-110,-62,-58,-60,-63,-64,-67,-70,-78,-77,-104,-165,-115,-94,-93,-109,-111,-254,-254,169,-164,-217,-252,-242,-253,-251,-240,-219,-250,-231,-198,-247,-241,-196,-249,-248,-195,-239,-79,-17,-76,-18,-75,272,-223,-237,-238,-222,-220,-217,-179,-182,-221,-112,-114,-113,-95,350,359,-81,169,-80,-236,-235,-234,-244,-243,-204,-216,-205,-203,-207,-211,-206,-202,-209,-214,-200,-199,-208,-215,-210,-212,370,-213,-201,-97,-96,387,-224,-232,-233,-183,-180,-218,409,-197,-107,409,-168,409,-167,-166,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[238,238,238,238,238,238,238,238,238,238,238,238,238,]),'struct_or_union_specifier':([0,1,16,19,24,44,49,50,58,71,79,90,91,96,97,98,100,102,124,158,162,174,176,221,226,246,298,326,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'init_declarator_list':([32,66,],[76,76,]),'init_declarator_list_opt':([32,66,],[77,77,]),'iteration_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[239,239,239,239,239,239,239,239,239,239,239,239,239,]),'quote_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[241,241,241,241,241,241,241,241,241,241,241,241,241,]),'enumerator':([74,147,151,230,],[148,148,148,333,]),'type_qualifier_list_opt':([46,],[84,]),'statement_list_opt':([158,],[243,]),'expression_opt':([158,246,251,262,343,347,350,359,387,403,404,406,412,424,429,434,],[244,244,244,244,244,384,244,244,244,414,244,244,244,430,244,244,]),'parameter_list':([71,221,298,326,],[144,144,144,144,]),'labeled_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[245,245,245,245,245,245,245,245,245,245,245,245,245,]),'abstract_declarator':([142,192,221,298,],[222,222,324,324,]),'initializer_list':([236,],[337,]),'direct_abstract_declarator':([142,192,219,221,298,299,],[224,224,320,224,224,320,]),'identifier':([70,71,114,118,120,124,126,153,158,169,176,178,180,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,225,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[137,145,137,137,137,137,137,137,137,137,137,275,276,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,327,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'attribute_expr':([227,],[330,]),'unary_expression':([70,114,118,120,124,126,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[108,177,108,186,187,194,187,187,108,187,187,187,187,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,187,108,108,108,108,187,187,187,187,108,187,108,187,187,108,108,187,187,187,187,187,187,187,187,108,187,187,187,187,187,187,187,187,187,187,187,187,]),'abstract_declarator_opt':([142,192,],[217,297,]),'initializer':([153,236,378,],[234,336,401,]),'struct_declaration_list':([58,96,102,],[97,162,174,]),'pp_directive':([0,24,],[12,12,]),'declaration_list':([49,79,158,],[90,90,246,]),'assignment_expression':([124,153,158,176,181,182,185,211,236,246,247,251,262,288,295,343,347,350,351,353,359,360,366,377,378,387,403,404,406,407,412,424,428,429,434,],[191,235,191,191,191,278,191,191,235,191,191,191,191,367,368,191,191,191,191,191,191,191,395,191,235,191,191,191,191,191,191,191,191,191,191,]),'type_specifier':([0,1,16,19,24,44,49,50,58,71,79,90,91,96,97,98,100,102,124,158,162,174,176,221,226,246,298,326,],[16,16,16,16,16,16,16,16,98,16,16,16,16,98,98,98,98,98,98,16,98,98,98,16,16,16,16,16,]),'compound_statement':([89,124,154,158,176,185,246,251,262,343,350,359,387,404,406,412,429,434,],[159,188,237,248,188,188,248,248,248,248,248,248,248,248,248,248,248,248,]),'pointer':([0,5,24,32,66,84,101,142,152,192,221,270,298,],[13,13,13,13,13,157,13,219,13,299,219,13,299,]),'translation_unit':([0,],[24,]),'direct_declarator':([0,5,13,24,32,50,55,61,66,101,142,152,219,221,270,],[27,27,60,27,27,92,92,92,27,27,27,27,60,27,27,]),'init_declarator':([32,66,152,],[80,80,233,]),'declaration_a':([0,24,49,79,90,158,246,],[29,29,29,29,29,29,29,]),'declaration_b':([0,24,49,79,90,158,246,],[30,30,30,30,30,30,30,]),'declaration_c':([0,24,49,79,90,158,246,],[31,31,31,31,31,31,31,]),'specifier_qualifier_list_opt':([98,100,],[166,168,]),'declarator':([0,5,24,32,66,101,142,152,221,270,],[49,54,49,79,105,173,223,105,54,173,]),'typedef_name':([0,1,16,19,24,44,49,50,58,71,79,90,91,96,97,98,100,102,124,158,162,174,176,221,226,246,298,326,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'parameter_type_list_opt':([221,298,326,],[323,323,375,]),'asm_argument':([409,426,],[418,418,]),'struct_declarator':([101,270,],[172,361,]),'type_qualifier':([0,1,16,19,24,44,46,49,50,58,71,79,83,90,91,96,97,98,100,102,124,158,162,174,176,221,226,246,298,326,],[44,44,44,44,44,44,85,44,44,100,44,44,155,44,44,100,100,100,100,100,100,44,100,100,100,44,44,44,44,44,]),'times':([0,5,24,32,66,84,101,142,152,192,221,270,298,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'assignment_operator':([187,],[288,]),'statement_list':([158,246,],[251,343,]),'expression':([124,158,176,181,185,211,246,247,251,262,343,347,350,351,353,359,360,377,387,403,404,406,407,412,424,428,429,434,],[189,252,189,277,189,316,252,346,252,252,252,252,252,386,388,252,394,400,252,252,252,252,417,252,252,432,252,252,]),'storage_class_specifier':([0,1,16,19,24,44,49,50,71,79,90,91,158,221,226,246,298,326,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'declaration_specifiers_opt':([1,16,44,],[51,63,82,]),'external_declaration':([0,24,],[14,68,]),'asm_param_list':([392,409,420,],[410,419,427,]),'type_name':([124,176,],[190,274,]),'declspec':([0,24,49,79,90,158,246,],[19,19,19,19,19,19,19,]),'statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[257,257,349,356,349,385,393,405,415,416,423,433,436,]),'cast_expression':([70,118,124,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[125,184,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,369,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'struct_declarator_list':([101,],[170,]),'constant_expression':([70,169,218,231,255,272,325,],[134,269,134,334,352,362,134,]),'parameter_declaration':([71,221,226,298,326,],[141,141,329,141,141,]),'argument_expression_list':([182,],[280,]),'primary_expression':([70,114,118,120,124,126,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'declaration':([0,24,49,79,90,158,246,],[33,33,88,88,160,88,160,]),'jump_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[259,259,259,259,259,259,259,259,259,259,259,259,259,]),'enumerator_list':([74,147,151,],[149,228,232,]),'empty':([1,16,32,44,46,49,66,70,71,79,98,100,101,142,158,192,218,221,246,251,262,270,298,325,326,343,347,350,359,387,392,403,404,406,409,412,420,424,429,434,],[52,52,78,52,86,87,78,119,139,87,165,165,171,220,261,220,119,321,342,342,342,171,321,119,321,342,342,342,342,342,411,342,342,342,411,342,411,342,342,342,]),'identifier_list_opt':([71,],[138,]),'constant':([70,114,118,120,124,126,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'attribute':([27,60,92,],[69,69,69,]),'struct_declaration':([58,96,97,102,162,174,],[99,99,163,99,163,163,]),'selection_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[263,263,263,263,263,263,263,263,263,263,263,263,263,]),'postfix_expression':([70,114,118,120,124,126,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'asm_expression':([264,358,],[357,391,]),'asm_qualifier':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[264,264,264,264,264,264,264,264,264,264,264,264,264,]),'unary_operator':([70,114,118,120,124,126,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,296,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'struct_or_union':([0,1,16,19,24,44,49,50,58,71,79,90,91,96,97,98,100,102,124,158,162,174,176,221,226,246,298,326,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'asm_arguments_list':([409,426,],[420,431,]),'parameter_type_list':([71,221,298,326,],[140,322,322,322,]),'type_qualifier_list':([46,],[83,]),'compound_string':([17,240,358,409,426,],[64,338,392,421,421,]),'declaration_specifiers':([0,1,16,19,24,44,49,50,71,79,90,91,158,221,226,246,298,326,],[32,53,53,66,32,53,66,66,142,66,66,66,66,142,142,66,142,142,]),'identifier_list':([71,],[143,]),'declaration_list_opt':([49,79,],[89,154,]),'function_definition':([0,24,],[38,38,]),'binary_expression':([70,124,153,158,169,176,181,182,185,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,218,231,236,246,247,251,255,262,272,288,295,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[130,130,130,130,130,130,130,130,130,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,130,317,318,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'enum_specifier':([0,1,16,19,24,44,49,50,58,71,79,90,91,96,97,98,100,102,124,158,162,174,176,221,226,246,298,326,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'decl_body':([0,19,24,49,50,79,90,91,158,246,],[43,67,43,43,94,43,43,94,43,43,]),'constant_expression_opt':([70,218,325,],[131,319,374,]),'specifier_qualifier_list':([58,96,97,98,100,102,124,162,174,176,],[101,101,101,167,167,101,192,101,101,192,]),'conditional_expression':([70,124,153,158,169,176,181,182,185,211,218,231,236,246,247,251,255,262,272,288,295,325,343,347,350,351,353,359,360,366,370,377,378,387,403,404,406,407,412,424,428,429,434,],[135,193,193,193,135,193,193,193,193,193,135,135,193,193,193,193,135,193,135,193,193,135,193,193,193,193,193,193,193,193,396,193,193,193,193,193,193,193,193,193,193,193,193,]),'asm_statement':([158,246,251,262,343,350,359,387,404,406,412,429,434,],[267,267,267,267,267,267,267,267,267,267,267,267,267,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',41),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',42),
  ('constant_expression_opt -> empty','constant_expression_opt',1,'p_constant_expression_opt','plyparser.py',41),
  ('constant_expression_opt -> constant_expression','constant_expression_opt',1,'p_constant_expression_opt','plyparser.py',42),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',41),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',42),
  ('declaration_specifiers_opt -> empty','declaration_specifiers_opt',1,'p_declaration_specifiers_opt','plyparser.py',41),
  ('declaration_specifiers_opt -> declaration_specifiers','declaration_specifiers_opt',1,'p_declaration_specifiers_opt','plyparser.py',42),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',41),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',42),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',41),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',42),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',41),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',42),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',41),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',42),
  ('specifier_qualifier_list_opt -> empty','specifier_qualifier_list_opt',1,'p_specifier_qualifier_list_opt','plyparser.py',41),
  ('specifier_qualifier_list_opt -> specifier_qualifier_list','specifier_qualifier_list_opt',1,'p_specifier_qualifier_list_opt','plyparser.py',42),
  ('statement_list_opt -> empty','statement_list_opt',1,'p_statement_list_opt','plyparser.py',41),
  ('statement_list_opt -> statement_list','statement_list_opt',1,'p_statement_list_opt','plyparser.py',42),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',41),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',42),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',333),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',340),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',351),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',356),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',361),
  ('external_declaration -> QUOTE compound_string','external_declaration',2,'p_external_declaration_4','c_parser.py',366),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',370),
  ('function_definition -> declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',379),
  ('function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',391),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',402),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',403),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',404),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',405),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',406),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',407),
  ('statement -> asm_statement','statement',1,'p_statement','c_parser.py',408),
  ('statement -> quote_statement','statement',1,'p_statement','c_parser.py',409),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',423),
  ('declaration_a -> decl_body SEMI','declaration_a',2,'p_declaration_a','c_parser.py',503),
  ('declaration_b -> declspec decl_body SEMI','declaration_b',3,'p_declaration_b','c_parser.py',508),
  ('declaration_c -> STDCALL decl_body SEMI','declaration_c',3,'p_declaration_c','c_parser.py',515),
  ('declaration -> declaration_a','declaration',1,'p_declaration','c_parser.py',522),
  ('declaration -> declaration_b','declaration',1,'p_declaration','c_parser.py',523),
  ('declaration -> declaration_c','declaration',1,'p_declaration','c_parser.py',524),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',532),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',533),
  ('declaration_specifiers -> type_qualifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',538),
  ('declaration_specifiers -> type_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',543),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',548),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',553),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',554),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',555),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',556),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',557),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','c_parser.py',562),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_1','c_parser.py',563),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_1','c_parser.py',564),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','c_parser.py',565),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_1','c_parser.py',566),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_1','c_parser.py',567),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_1','c_parser.py',568),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_1','c_parser.py',569),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_1','c_parser.py',570),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier_1','c_parser.py',571),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_1','c_parser.py',572),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_1','c_parser.py',573),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',578),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',579),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',584),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',585),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',593),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',594),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',599),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',604),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',612),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',613),
  ('struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',622),
  ('struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',631),
  ('struct_or_union_specifier -> struct_or_union TYPEID LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',632),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',641),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',642),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',649),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',650),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',655),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',677),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',678),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',686),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',691),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',692),
  ('struct_declarator -> empty','struct_declarator',1,'p_struct_declarator_3','c_parser.py',700),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',710),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',711),
  ('enum_specifier -> ENUM LBRACE enumerator_list RBRACE','enum_specifier',4,'p_enum_specifier_2','c_parser.py',716),
  ('enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE','enum_specifier',5,'p_enum_specifier_3','c_parser.py',721),
  ('enum_specifier -> ENUM TYPEID LBRACE enumerator_list RBRACE','enum_specifier',5,'p_enum_specifier_3','c_parser.py',722),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',727),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',728),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',729),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',740),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',741),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','c_parser.py',753),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','c_parser.py',758),
  ('attribute_expr -> ID LPAREN expression RPAREN','attribute_expr',4,'p_attribute_expr','c_parser.py',763),
  ('attribute_expr -> ID','attribute_expr',1,'p_attribute_expr','c_parser.py',764),
  ('attribute -> ATTRIBUTE LPAREN LPAREN attribute_expr RPAREN RPAREN','attribute',6,'p_attribute','c_parser.py',772),
  ('declspec -> DECLSPEC LPAREN ID RPAREN','declspec',4,'p_declspec','c_parser.py',776),
  ('direct_declarator -> STDCALL direct_declarator','direct_declarator',2,'p_direct_declarator_1','c_parser.py',780),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator_2','c_parser.py',785),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator_3','c_parser.py',794),
  ('direct_declarator -> direct_declarator LBRACKET constant_expression_opt RBRACKET','direct_declarator',4,'p_direct_declarator_4','c_parser.py',799),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator_5','c_parser.py',809),
  ('direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN','direct_declarator',4,'p_direct_declarator_5','c_parser.py',810),
  ('direct_declarator -> direct_declarator attribute','direct_declarator',2,'p_direct_declarator_6','c_parser.py',820),
  ('times -> TIMES','times',1,'p_times','c_parser.py',826),
  ('times -> CDECL TIMES','times',2,'p_times','c_parser.py',827),
  ('times -> STDCALL TIMES','times',2,'p_times','c_parser.py',828),
  ('pointer -> times type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',836),
  ('pointer -> times type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',837),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',847),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',848),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',853),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',854),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',862),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',863),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',872),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',890),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',902),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',903),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',912),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer_2','c_parser.py',917),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer_2','c_parser.py',918),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','c_parser.py',923),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','c_parser.py',924),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',933),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',948),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',956),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',961),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',971),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',975),
  ('direct_abstract_declarator -> LBRACKET constant_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',985),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',993),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1003),
  ('compound_statement -> LBRACE statement_list_opt RBRACE','compound_statement',3,'p_compound_statement_1','c_parser.py',1011),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement_2','c_parser.py',1018),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement_3','c_parser.py',1025),
  ('statement_list -> statement','statement_list',1,'p_statement_list','c_parser.py',1039),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','c_parser.py',1040),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1048),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1052),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1056),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1060),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1064),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1068),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1072),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN','iteration_statement',6,'p_iteration_statement_2','c_parser.py',1076),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1080),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1084),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1088),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1092),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1096),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1097),
  ('compound_string -> compound_string STRING_LITERAL','compound_string',2,'p_compound_string','c_parser.py',1102),
  ('compound_string -> STRING_LITERAL','compound_string',1,'p_compound_string','c_parser.py',1103),
  ('asm_argument -> compound_string LPAREN expression RPAREN','asm_argument',4,'p_asm_argument','c_parser.py',1113),
  ('asm_arguments_list -> asm_argument COMMA asm_arguments_list','asm_arguments_list',3,'p_asm_arguments_list','c_parser.py',1117),
  ('asm_arguments_list -> asm_argument','asm_arguments_list',1,'p_asm_arguments_list','c_parser.py',1118),
  ('asm_param_list -> COLON asm_arguments_list asm_param_list','asm_param_list',3,'p_asm_param_list','c_parser.py',1126),
  ('asm_param_list -> COLON asm_param_list','asm_param_list',2,'p_asm_param_list','c_parser.py',1127),
  ('asm_param_list -> empty','asm_param_list',1,'p_asm_param_list','c_parser.py',1128),
  ('asm_qualifier -> ASM VOLATILE','asm_qualifier',2,'p_asm_qulifier','c_parser.py',1140),
  ('asm_qualifier -> ASM','asm_qualifier',1,'p_asm_qulifier','c_parser.py',1141),
  ('asm_expression -> LPAREN asm_expression RPAREN','asm_expression',3,'p_asm_expression','c_parser.py',1149),
  ('asm_expression -> LPAREN compound_string asm_param_list RPAREN','asm_expression',4,'p_asm_expression','c_parser.py',1150),
  ('asm_statement -> asm_qualifier asm_expression SEMI','asm_statement',3,'p_asm_statement','c_parser.py',1158),
  ('quote_statement -> QUOTE compound_string SEMI','quote_statement',3,'p_quote_statement','c_parser.py',1162),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1166),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1170),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1171),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1183),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1187),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1188),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1201),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1202),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1203),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1204),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1205),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1206),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1207),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1208),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1209),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1210),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1211),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1216),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1220),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1221),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1229),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1230),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1231),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1232),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1233),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1234),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1235),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1236),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1237),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1238),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1239),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1240),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1241),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1242),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1243),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1244),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1245),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1246),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1247),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1255),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1259),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1263),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1267),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1268),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1269),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1274),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1275),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1283),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1284),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1285),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1286),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1287),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1288),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_exptession_1','c_parser.py',1293),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_exptession_2','c_parser.py',1297),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_exptession_3','c_parser.py',1301),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_exptession_3','c_parser.py',1302),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1307),
  ('postfix_expression -> postfix_expression ARROW identifier','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1308),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1313),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1314),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1319),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1323),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression_3','c_parser.py',1327),
  ('primary_expression -> WSTRING_LITERAL','primary_expression',1,'p_primary_expression_3','c_parser.py',1328),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1334),
  ('primary_expression -> LPAREN compound_statement RPAREN','primary_expression',3,'p_primary_expression_5','c_parser.py',1338),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1342),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1343),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1352),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1356),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1357),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1358),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1364),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1369),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1370),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1376),
]

.data
XORED_TABLE:
.byte 0x8a,0x04,0xdc,0x97,0x30,0x76,0x7d,0x38,0xeb,0x15,0x42,0xe3,0x2b,0xc6,0x3e,0xdf
.byte 0x27,0x0a,0x27,0xba,0x75,0x92,0x51,0x15,0x88,0x12,0x60,0x37,0x59,0x76,0x68,0x69
.byte 0x74,0xf2,0xe0,0x38,0x60,0x18,0x43,0x19,0xf8,0x21,0x76,0xf9,0x26,0x40,0x7d,0x7e
.byte 0xf7,0x62,0x72,0xf5,0x3a,0x52,0x77,0x7b,0xa4,0x70,0x11,0xa0,0x7b,0x24,0xeb,0x7c
.byte 0x2b,0x57,0x71,0xeb,0xa8,0x94,0x82,0xd8,0x2a,0x57,0x6c,0xfb,0xa6,0xe3,0x6f,0x57
.byte 0x9e,0x92,0x58,0x0f,0x45,0x78,0x6f,0xea,0xb5,0x12,0x90,0x0b,0x49,0x64,0x7d,0xe0
.byte 0xb0,0x41,0x82,0x68,0x1c,0x2e,0x0b,0xdb,0x7b,0xa3,0x7c,0x94,0x2f,0x78,0xfe,0xa5
.byte 0x81,0x9d,0x0e,0xcf,0x7e,0x18,0x97,0x38,0x27,0xa2,0x1c,0x4b,0x67,0x69,0xe7,0xae
.byte 0x97,0x03,0x18,0x4f,0x6b,0x75,0xf5,0xa4,0x92,0x50,0x0a,0x2c,0x3e,0x3f,0xa3,0x93
.byte 0xd2,0x70,0x2e,0xfd,0x00,0x9a,0x7a,0x2f,0x53,0xf5,0x21,0xd0,0xbc,0x87,0xd4,0x2d
.byte 0x54,0xf0,0x2b,0xc8,0xa4,0x9a,0xd4,0x5f,0x59,0xb0,0x6a,0xc3,0xd3,0x65,0xe3,0x3e
.byte 0x1e,0x7d,0xfa,0xae,0x8f,0x95,0xd8,0x59,0x5a,0x1f,0x94,0x53,0x00,0xfd,0x91,0x26
.byte 0x65,0xdb,0x0e,0xed,0x53,0x13,0x6e,0x7f,0x24,0x61,0x06,0x84,0x6e,0x48,0x71,0x78
.byte 0xe3,0xa7,0x15,0x85,0x6e,0x1b,0x73,0x7f,0xf2,0xaa,0x54,0x80,0x69,0x4e,0x7e,0x78
.byte 0xe1,0xef,0x5c,0x83,0x6d,0x1e,0x16

.align 4
.long 0
XORED_BUFFER:
.skip 128,0

.text
.global __UnXOrSfree
__UnXOrSfree:
    lea     XORED_BUFFER,%eax
    cmp     %eax,4(%esp)
    je      __UnXOrFree_free_local
    push    4(%esp)
    push    $0
    call    _GetProcessHeap@0
    push    %eax
    call    _HeapFree@12
    ret
__UnXOrFree_free_local:
    decl    -4(%eax)
    ret

.global __UnXOrS
__UnXOrS:
    lea     XORED_BUFFER,%eax
    cmpl    $0,-4(%eax)
    jne     __UnXOr_heap_allocate
    cmpl    $128,8(%esp)
    jg      __UnXOr_heap_allocate
    incl    -4(%eax)
    jmp     __UnXOr_buffer
__UnXOr_heap_allocate:
    push    8(%esp)
    push    $0
    call    _GetProcessHeap@0
    push    %eax
    call    _HeapAlloc@12
__UnXOr_buffer:
    push    %esi
    push    %edi
    push    %ecx

    mov     %eax,%edi
    movl    16(%esp),%esi
    movl    $18039281,%eax
    xor     %eax,%esi
    sub     %eax,%esi
    and     $(0x0ffff),%esi
    lea     XORED_TABLE(%esi),%esi
    movl    20(%esp),%ecx
    movl    (%esi),%eax
    incl    %esi
    push    %edi

__UnXOr_loop:
    movb    (%esi),%ah
    xorb    %al,%ah
    movb    %ah,(%edi)
    incl    %esi
    ror     $1,%al
    incl    %edi
    decl    %ecx
    jne     __UnXOr_loop

    pop     %eax
    pop     %ecx
    pop     %edi
    pop     %esi
    ret

